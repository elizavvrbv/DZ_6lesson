# Измените код одной-двух решенных ранее задач (с прошлых семинаров или домашних работ), применив лямбды, filter,
# map, zip, enumerate, списочные выражения

# 1. Наибольший общий делитель. В модуле math есть функция math.gcd(a, b), возвращающая наибольший общий делитель
# (НОД) двух чисел.
# Вычислите и напечатайте наибольший общий делитель для списка натуральных чисел.
# Ввод чисел продолжается до ввода пустой строки.

import math
from functools import reduce

# lst = []
# a = None
# while a != '':
#     a = input('Введите натуральное число: ')
#     if a.isdigit():
#         if int(a) > 0:
#             lst.append(int(a))
#
# print(reduce(lambda x, y: math.gcd(x, y), lst[1:]))

# 2. Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# flag = True
# while flag:
#     try:
#         print(reduce(lambda x, y: x + y, [int(i) for i in input('Введите вещественное число: ')]))
#         flag = False
#     except ValueError:
#         continue

# 3.Напишите программу, которая по заданному номеру четверти,
# # показывает диапазон возможных координат точек в этой четверти (x и y).
# quat = {'1':'x и y > 0', '2':'x < 0 и y > 0', '3':'x и y < 0', '4':'x > 0 и y < 0'}
# print((lambda n: quat[n])(input('Введите номер четверти от 1 до 4: ')))

# 4. Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N.
# from itertools import accumulate
#
# n = int(input('Введите натуральное число: '))
# print(*accumulate(map(lambda x: max(x, 1), list(range(1, n + 1))), lambda x, y: x * y))

